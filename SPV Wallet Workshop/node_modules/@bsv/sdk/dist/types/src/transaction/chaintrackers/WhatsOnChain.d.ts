import ChainTracker from "../ChainTracker.js";
import { HttpClient } from "../http/HttpClient.js";
/** Configuration options for the WhatsOnChain ChainTracker. */
export interface WhatsOnChainConfig {
    /** Authentication token for the WhatsOnChain API */
    apiKey?: string;
    /** The HTTP client used to make requests to the API. */
    httpClient?: HttpClient;
}
/**
 * Represents a chain tracker based on What's On Chain .
 */
export default class WhatsOnChain implements ChainTracker {
    readonly network: string;
    readonly apiKey: string;
    private readonly URL;
    private readonly httpClient;
    /**
     * Constructs an instance of the WhatsOnChain ChainTracker.
     *
     * @param {'main' | 'test' | 'stn'} network - The BSV network to use when calling the WhatsOnChain API.
     * @param {WhatsOnChainConfig} config - Configuration options for the WhatsOnChain ChainTracker.
     */
    constructor(network?: 'main' | 'test' | 'stn', config?: WhatsOnChainConfig);
    isValidRootForHeight(root: string, height: number): Promise<boolean>;
    private getHeaders;
}
//# sourceMappingURL=WhatsOnChain.d.ts.map